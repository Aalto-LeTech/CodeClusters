# Base config copied from here https://www.thepolyglotdeveloper.com/2017/03/nginx-reverse-proxy-containerized-docker-applications/

worker_processes 4;

events {
    worker_connections 1024;
}

http {
    sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	variables_hash_max_size 2048;
	large_client_header_buffers 4 16k;
	
	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	client_max_body_size 0;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

    # https://www.techrepublic.com/article/how-to-configure-gzip-compression-with-nginx/
    gzip              on;
    gzip_comp_level   4;
    # Compress data even for clients that are connecting via proxies
    gzip_proxied      any;
    # Nginx won't compress anything smaller than 512 bytes(?)
    gzip_min_length   512;
    # Disable compression for Internet Explorer versions 1-6
    gzip_disable      "MSIE [1-6]\.";
    gzip_types        text/plain text/xml text/css
                      text/comma-separated-values
                      text/javascript
                      application/javascript application/x-javascript
                      application/xml application/atom+xml;

    upstream docker-react-server {
        server client:80;
    }

    upstream docker-node-server {
        server api:8600;
    }

    access_log      /var/log/nginx/codeclusters.cs.aalto.fi.access.log;
    error_log       /var/log/nginx/codeclusters.cs.aalto.fi.error.log;

    server {
        listen 80;
        server_name _;

        # Let's Encrypt ACME challenge to verify domain ownership
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl http2;
        server_name codeclusters.cs.aalto.fi;

        # These security settings can be found from here
        # https://www.linode.com/docs/web-servers/nginx/tls-deployment-best-practices-for-nginx/
        server_tokens       off; # Obsfuscate Nginx version to prevent vulnerability scanning
        keepalive_timeout   75; # Reuses https-connections to minimize CPU load

        add_header          Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header          Content-Security-Policy "upgrade-insecure-requests";
        add_header          X-Frame-Options "SAMEORIGIN" always;
        add_header          X-XSS-Protection "1; mode=block" always;
        add_header          X-Content-Type-Options "nosniff" always;
        add_header          X-UA-Compatible "IE=Edge" always;
        add_header          Cache-Control "no-transform" always;
        add_header          Referrer-Policy "same-origin" always;

        # Diffie-Hellman parameter for DHE cipher suites
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # Let's Encrypt certs
        ssl_certificate /etc/letsencrypt/live/codeclusters.cs.aalto.fi/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/codeclusters.cs.aalto.fi/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        ssl_session_cache   shared:SSL:10m;
        ssl_session_timeout 1440m;
        ssl_session_tickets off;

        # OCSP Stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 127.0.0.11 valid=30s; # Docker DNS Server

        # Enable TLS 1.3 early data
        ssl_early_data on;

        location /api/ {
            proxy_pass         http://docker-node-server/api/;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
        location / {
            proxy_pass         http://docker-react-server;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
    }
}