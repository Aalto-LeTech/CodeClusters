# Base config copied from here https://www.thepolyglotdeveloper.com/2017/03/nginx-reverse-proxy-containerized-docker-applications/

worker_processes 1;

events { worker_connections 1024; }

http {
    sendfile on;
    # include /etc/nginx/mime.types;

    # https://www.techrepublic.com/article/how-to-configure-gzip-compression-with-nginx/
    gzip              on;
    gzip_comp_level   4;
    # Compress data even for clients that are connecting via proxies
    gzip_proxied      any;
    # Nginx won't compress anything smaller than 512 bytes(?)
    gzip_min_length   512;
    # Disable compression for Internet Explorer versions 1-6
    gzip_disable      "MSIE [1-6]\.";
    gzip_types        text/plain text/xml text/css
                      text/comma-separated-values
                      text/javascript
                      application/javascript application/x-javascript
                      application/xml application/atom+xml;

    upstream docker-react-server {
        server frontend:80;
    }

    upstream docker-node-server {
        server backend:8600;
    }

    upstream docker-solr-server {
        server solr:8983;
    }

    server {
        listen 80 default_server;
        server_name _;

        # These security settings can be found from here
        # https://www.linode.com/docs/web-servers/nginx/tls-deployment-best-practices-for-nginx/
        server_tokens       off; # Obsfuscate Nginx version to prevent vulnerability scanning
        keepalive_timeout   75; # Reuses https-connections to minimize CPU load

        add_header          X-Content-Type-Options nosniff;
        add_header          X-Frame-Options SAMEORIGIN;
        add_header          X-XSS-Protection "1; mode=block";

        # Example way of serving Solr that uses the JWT authentication without proxying it through the Node.js.
        # I didn't however notice it to be any faster than using a proxy, which makes using it kinda unnecessary.
        # But hey, it _can_ be done..
        location /_s {
            add_header         Access-Control-Allow-Origin *;
            add_header         Access-Control-Allow-Methods "GET, OPTIONS";
            add_header         Access-Control-Allow-Headers "Authorization";
            access_by_lua_file /usr/local/openresty/lualib/resty/jwt-auth.lua;

            proxy_pass         http://docker-solr-server/solr/submission-search/select;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
        location /api/ {
            proxy_pass         http://docker-node-server/api/;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
        location / {
            proxy_pass         http://docker-react-server;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
    }
}