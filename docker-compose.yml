version: '3.5'

services:
  reverse_proxy:
    build:
      context: ./local-reverse-proxy
    ports:
      - 9080:80
    restart: always
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    restart: always
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - 9600:8600
    environment:
      NODE_ENV: production
      PORT: 8600
      LOG_LEVEL: info
      JWT_SECRET: verylongrandomstring
      DB_HOST: host.docker.internal
      DB_PORT: 5600
      DB_USER: pg-user
      DB_PASSWORD: my-pg-password
      DB_NAME: my_postgres_db
    restart: always
  flyway_migration:
    image: flyway/flyway:6.1.3-alpine
    entrypoint: ["sh", "-c", "/flyway/wait-for-it.sh postgres:5432 -- /flyway/flyway migrate"]
    volumes:
    - ./db/migrations:/flyway/sql
    - ./db/seed/afterMigrate.sql:/flyway/sql/afterMigrate.sql # Should I do this automatically or as another docker job?
    - ./db/scripts/wait-for-it.sh:/flyway/wait-for-it.sh
    environment:
      FLYWAY_PASSWORD: my-pg-password
      FLYWAY_USER: pg-user
      FLYWAY_URL: jdbc:postgresql://postgres:5432/my_postgres_db
      FLYWAY_CONNECT_RETRIES: 180
  postgres:
    image: postgres:11.6-alpine
    ports:
      - 5600:5432
    environment:
      POSTGRES_PASSWORD: my-pg-password
      POSTGRES_USER: pg-user
      POSTGRES_DB: my_postgres_db
    volumes:
      - ./db/data:/var/lib/postgresql/data
    restart: always
  solr:
    build:
      context: ./solr
    ports:
      - 8983:8983
    volumes:
      - ./solr/data:/var/solr
    command: ["solr-precreate", "submission-search", "/opt/solr-8.4.1/config"]

networks:
  default:
    name: codeclusters-local
