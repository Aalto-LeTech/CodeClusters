<?xml version="1.0" encoding="UTF-8" ?>
<schema name="db-submission" version="1.6">
   <!-- If you remove this field, you must _also_ disable the update log in solrconfig.xml
      or Solr won't start. _version_ and update log are required for SolrCloud
   --> 
   <!-- docValues are enabled by default for long type so we don't need to index the version field  -->
   <field name="_version_" type="plong" indexed="false" stored="false"/>
   
   <!-- Only remove the "id" field if you have a very good reason to. While not strictly
     required, it is highly recommended. A <uniqueKey> is present in almost all Solr 
     installations. See the <uniqueKey> declaration below where <uniqueKey> is set to "id".
   -->   
   <field name="id" type="string" indexed="true" stored="true" required="true" multiValued="false" />
   
   <field name="course_id" type="pint" indexed="true" stored="true" />
   <field name="exercise_id" type="pint" indexed="true" stored="true" />
   <field name="student_id" type="pint" indexed="true" stored="true" />
   <field name="timestamp" type="pdate" indexed="true" stored="true"/>
   <field name="language" type="string" indexed="true" stored="true" />
   <field name="code_length" type="pint" indexed="true" stored="true" />
   <field name="code" type="text_general" indexed="true" stored="true"/>

  <dynamicField name="*_keywords" type="pint" indexed="true" stored="true"/>
  <dynamicField name="*_rare_keywords" type="pint" indexed="true" stored="true"/>
  <dynamicField name="*_metric" type="pint" indexed="true" stored="true"/>

   <!-- FROM THE DEFAULT SOLR managed-schema.xml -->

   <!-- Field to use to determine and enforce document uniqueness.
        Unless this field is marked with required="false", it will be a required field
   -->
   <uniqueKey>id</uniqueKey>

   <!-- The StrField type is not analyzed, but indexed/stored verbatim. -->
   <fieldType name="string" class="solr.StrField" sortMissingLast="true" docValues="true" />
   <fieldType name="strings" class="solr.StrField" sortMissingLast="true" multiValued="true" docValues="true" />

   <!-- boolean type: "true" or "false" -->
   <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>
   <fieldType name="booleans" class="solr.BoolField" sortMissingLast="true" multiValued="true"/>

   <!--
      Numeric field types that index values using KD-trees.
      Point fields don't support FieldCache, so they must have docValues="true" if needed for sorting, faceting, functions, etc.
    -->
    <fieldType name="pint" class="solr.IntPointField" docValues="true"/>
    <fieldType name="pfloat" class="solr.FloatPointField" docValues="true"/>
    <fieldType name="plong" class="solr.LongPointField" docValues="true"/>
    <fieldType name="pdouble" class="solr.DoublePointField" docValues="true"/>

    <fieldType name="pints" class="solr.IntPointField" docValues="true" multiValued="true"/>
    <fieldType name="pfloats" class="solr.FloatPointField" docValues="true" multiValued="true"/>
    <fieldType name="plongs" class="solr.LongPointField" docValues="true" multiValued="true"/>
    <fieldType name="pdoubles" class="solr.DoublePointField" docValues="true" multiValued="true"/>
    <fieldType name="random" class="solr.RandomSortField" indexed="true"/>

   <!-- KD-tree versions of date fields -->
    <fieldType name="pdate" class="solr.DatePointField" docValues="true"/>
    <fieldType name="pdates" class="solr.DatePointField" docValues="true" multiValued="true"/>
    
    <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
    <fieldType name="binary" class="solr.BinaryField"/>

    <!-- A general text field that has reasonable, generic
         cross-language defaults: it tokenizes with StandardTokenizer,
	       removes stop words from case-insensitive "stopwords.txt"
	       (empty by default), and down cases.  At query time only, it
	       also applies synonyms.
	  -->
    <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100" multiValued="true">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory" rule="java" />
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory" rule="java" />
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>
</schema>